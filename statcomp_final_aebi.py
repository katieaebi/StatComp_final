# -*- coding: utf-8 -*-
"""Statcomp_final_Aebi

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12GLu6YEMnNt8RA2Dh5OlYsYgqL-fY6Jq
"""

import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
import seaborn as sns

url2 = 'https://raw.githubusercontent.com/katieaebi/StatComp_final/main/ufo-sightings-transformed.csv'
ufo_df = pd.read_csv(url2)

ufo_df.head()

len(ufo_df)

"""Chance model:
Does summer have statistically longer UFO encounters than other seasons?

Null: length of encounters in summer <= length of encounters in other seasons,
Alternative: length of encounters in summer > length of encounters in other seasons

Test stat: summer-other seasons

Positive values support the alternative, and negative values support the null

Significance level: a = .01
"""

summer_mean_seconds = ufo_df[ufo_df['Season']=='Summer']['length_of_encounter_seconds'].mean()
summer_std_seconds = ufo_df[ufo_df['Season']=='Summer']['length_of_encounter_seconds'].std()
all_mean_seconds = ufo_df['length_of_encounter_seconds'].mean()
all_std_seconds =  ufo_df['length_of_encounter_seconds'].std()

print(summer_mean_seconds)
print(all_mean_seconds)
print(all_std_seconds)

from scipy.stats import norm as norm

#generate 10,000 random variables
rand_var_all = norm.rvs(loc=all_mean_seconds, scale=all_std_seconds, size=10000)
rand_var_summer = norm.rvs(loc=summer_mean_seconds, scale=summer_std_seconds, size=10000)

test_stats = []
for i, value in enumerate(rand_var_all):
  stat = rand_var_summer[i] - value
  if stat<=value:
    test_stats.append(stat)
test_stats = np.array(test_stats)

plt.figure(figsize = (10,8))
plt.hist(rand_var_all)
plt.axvline(summer_mean_seconds, c='r', label='Observed Mean for SummerEncounter Lengths')
plt.title('Simulated Averages for Length of All UFO Encounters')
plt.xlabel('Mean Lengths of Encounters (in Seconds x10^6)')
plt.legend()

plt.figure(figsize = (10,8))
plt.hist(test_stats)
plt.axvline(summer_mean_seconds-all_mean_seconds, c='r', label = 'Observed Test Stat')
plt.xlabel('Test Stats')
plt.title('Distribution of Test Statistics (Summer Mean-Year Mean)')
plt.legend()

p_null = len(rand_var_all[summer_mean_seconds <= rand_var_all])/len(rand_var_all)
p_val = len(rand_var_all[rand_var_all >= abs(summer_mean_seconds-p_null)])/len(rand_var_all)
print(p_val)

#Fail to reject the null. There was *wildly* not convincing evidence that ufo encounters in the summer occur for longer than encounters in other seasons.

"""Permutation test:

Is the distribution of UFO shapes significantly different in Florida than in Texas?

Null: Florida shapes = Texas shapes,
Alternative: Florida shapes != Texas shapes

Test stat: total variation distance

Large values support alternative, small values support the null

Significance level: a=.05
"""

shape_names = np.array(ufo_df['UFO_shape'].unique())
shape_names

obs_shapes_florida = np.zeros(len(ufo_df['UFO_shape'].unique()))
obs_shapes_texas = np.zeros(len(ufo_df['UFO_shape'].unique()))

for i, shape in enumerate(ufo_df['UFO_shape'].unique()):
  florida_count = len(ufo_df[ufo_df['Region'] == 'Florida'][ufo_df['UFO_shape'] == shape])
  texas_count = len(ufo_df[ufo_df['Region'] == 'Texas'][ufo_df['UFO_shape'] == shape])
  obs_shapes_florida[i] = florida_count
  obs_shapes_texas[i] = texas_count

def get_tvd(dist_one, dist_two):
  return sum(np.abs(dist_one-dist_two))/2

obs_tvd = get_tvd(obs_shapes_florida, obs_shapes_texas)
obs_tvd

FT_shapes_array = np.array(ufo_df[ufo_df['Region'] == 'Florida']['UFO_shape'].append(ufo_df[ufo_df['Region'] == 'Texas']['UFO_shape']))
FT_names_array = np.array(ufo_df[ufo_df['Region'] == 'Florida']['Region'].append(ufo_df[ufo_df['Region'] == 'Texas']['Region']))

print(FT_shapes_array)
print(FT_names_array)

def rand_states():
  np.random.shuffle(FT_names_array)
  return FT_names_array

rand_states()

def create_simulated_test_stat():
  sim_shapes_florida = np.zeros(len(ufo_df['UFO_shape'].unique()))
  sim_shapes_texas = np.zeros(len(ufo_df['UFO_shape'].unique()))

  sim_states = rand_states()

  for i, shape in enumerate(ufo_df['UFO_shape'].unique()):
    fake_florida = FT_shapes_array[sim_states == 'Florida']
    florida_count = len(fake_florida[fake_florida == shape])
    fake_texas = FT_shapes_array[sim_states == 'Texas']
    texas_count = len(fake_texas[fake_texas == shape])
    sim_shapes_florida[i] = florida_count
    sim_shapes_texas[i] = texas_count

  fake_test_stat = get_tvd(sim_shapes_florida, sim_shapes_texas)
  return fake_test_stat

create_simulated_test_stat()

sim_tvds = np.zeros(10000)

for i in range(10000):
  tvd = create_simulated_test_stat()
  sim_tvds[i] = tvd

sig_level = np.percentile(sim_tvds, 95)

plt.figure(figsize = (10,8))
plt.hist(sim_tvds)
plt.axvline(obs_tvd, c='r', label='Observed TVD between Florida and Texas')
plt.axvspan(ymax = 4000, ymin=0, xmin=sig_level, xmax=sim_tvds.max(), alpha=.5, color='green', label='Sig. Level' )
plt.xlabel("Total Variation Distances")
plt.title("TVDs of Simulated Florida and Texas Shape Distributions")
plt.legend()

#Fail to reject the null. There is not convincing evidence that the distribution of UFO shapes differs significantly from Florida to Texas.

"""Bootstrapping:   

Most encounters in the dataset occur during dark hours of the day. How would the mean hour of sightings change in a location like Alaska where daylight patterns work differently?

What is the mean hour of encounter in Alaska and how does it compare to the global average?

Null: Alaska's mean hour of encounter = global mean hour,
Alternative: Alaska's mean hour != global mean hour

Test Stat: mean

If the global average falls within the confidence interval for the Alaskan average, then that means that they are similar, supporting the null hypothesis; otherwise, they are dissimilar, supporting the alternative.

Significance level: a=.05
"""

ufo_df[ufo_df['Region']=='Alaska']['Season'].value_counts()

obs_alaska = ufo_df[ufo_df['Region']=='Alaska']['Hour'].mean()
obs_global = ufo_df['Hour'].mean()

def one_bootstrapped_mean():
  alaska_only = ufo_df[ufo_df['Region']=='Alaska']
  mimic_alaska = alaska_only.sample(n=len(alaska_only), replace=True)
  return np.average(mimic_alaska['Hour'])

one_bootstrapped_mean()

numsim = 10000
boots = np.zeros(numsim)

for i in range(numsim):
  boots[i] = one_bootstrapped_mean()

boots

left_endpoint = np.percentile(boots, 2.5)
right_endpoint = np.percentile(boots, 97.5)

plt.figure(figsize = (10,8))
plt.hist(boots)
plt.axvspan(ymax = boots.max(), ymin = 0, xmax = right_endpoint, xmin = left_endpoint, alpha=0.5, color='green', label='Confidence Interval')
plt.axvline(obs_alaska, c='r', label = 'Alaska observed value')
plt.axvline(obs_global, c='m', label = 'Global observed value')
plt.title('Distribution of Average Hour of UFO Sightings in Alaska')
plt.legend()

#reject the null hypothesis. There is convincing evidence to suggest that the mean hour of UFO sightings in Alaska is statistically lower
#than the global mean hour of UFO sightings.